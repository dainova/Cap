 Yelp Dataset (575 MB)
 https://d396qusza40orc.cloudfront.net/dsscapstone/dataset/yelp_dataset_challenge_academic_dataset.zip
This  project will be open-ended, so we will not be prescribing a specific analysis that you need to complete or a specific model that you need to build. Instead, we want you to explore the dataset and familiarize yourself with it so that you can formulate a question that is of interest to you.

In this capstone we will be applying a variety of tools of data science. Depending on the type of question you are interested in asking, you may need to apply a different set of skills. Given the nature of the dataset, you may want to read up on a few topics, such as text processing and the JSON format.

JSON data format
Text mining infrastucture in R: http://www.jstatsoft.org/v25/i05/
CRAN Packages for reading JSON data: jsonlite RJSONIO rjson
CRAN Task View on Web Technologies
CRAN Task View on Natural Language Processing
Tasks to accomplish

Learn about Yelp and what kinds of data it collects
Obtaining the data - Can you download the data and load it in R?
Familiarizing yourself with the metadata - What features/variables are included? What data is stored in each of the different files? How can you link the information from the different files together?
Questions to consider

What do the data look like?
Where do the data come from?
Can you think of any other data sources that might help you in this project?
What are some common issues in the analysis of text data?

-----------------------------------

library(rjson)
library(rlist)
library(magrittr)
library(dplyr)
library(lazyeval)
install.packages("C:/R/Package/lazyeval_0.1.10.zip", repos = NULL, type="source")

install.packages("dplyr")

setwd("C:/RR/yelp")
getwd()


list_structure = "yelp_academic_dataset_userjson" %>%  readLines %>%   lapply(fromJSON)



transaction = 
  list_structure %>%
  lapply(. %>% 
           list.remove(c("votes","friends","compliments","elite")) %>%
           as.data.frame) %>%
  dplyr::bind_rows(.id = "ID") %>%
  dplyr::full_join(
    list_structure %>%
      lapply(. %>% 
               use_series(compliments) %>%
               as.data.frame) %>%
      bind_rows(.id = "ID"))


result = 
  transaction %>%
  select(name, funny) %>%
  filter(!is.na(funny))


result 
max(result$funny)
result[result$funny == max(result$funny),]

write.table(result, "Result.txt", sep="\t")

